---
import { Image } from "astro:assets";

interface Props{
  imageTech:string[];
  alt:string[];
  title:string;
  techDescription:string[];
}

const {imageTech, title, alt,techDescription} = Astro.props
---


<article class="bgGradient border border-purple-500 rounded-xl p-4 w-full">
  <div class="flex flex-col lg:flex-row justify-center items-center">
    <div class="lg:hidden flex flex-col justify-center items-center gap-4 w-full">
      <h3 class="text-purple-200 text-xl font-geist-medium">{title}</h3>
      <div class="flex flex-wrap max-w-[300px] justify-center items-center mb-4">
        {techDescription.map((tech) => (
          <p class="border border-purple-200 text-purple-200 rounded-full font-geist-light w-fit px-4 py-1">{tech}</p>
        ))}
      </div>
    </div>
    <div class="flex justify-center items-center flex-wrap lg:flex-nowrap max-w-[300px] lg:max-w-[100%] gap-2">
      {imageTech.map((img,index) => (
        <Image
          src={img}
          alt={alt[index]}
          width={500}
          height={500}
          class="w-10 h-10 lg:w-32 lg:h-20 rounded-sm  object-scale-down"
        />
      ))}
    </div>
  </div>
  <div class="hidden lg:block">
    <h3 class="text-purple-200 ml-10 text-xl font-geist-medium mt-4">{title}</h3>
    <div class="flex gap-2 justify-center items-center my-4">
      {techDescription.map((tech) => (
        <p class="border border-purple-200 text-purple-200 rounded-full font-geist-light w-fit px-4 py-1">{tech}</p>
      ))}
    </div>
  </div>

</article>


<style>
  .bgGradient{
    background: linear-gradient(187deg,  
    rgba(128, 0, 128, 1) 0%,  /* Púrpura sólido en los laterales */
    rgba(128, 0, 128, 0) 90%,  /* Transparente en el centro */
    rgba(128, 0, 128, 1) 0%   /* Púrpura sólido en el otro lateral */
  );
  }
</style>